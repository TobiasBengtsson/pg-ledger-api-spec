openapi: "3.0.1"
info:
  version: "1.0.0-alpha1"
  title: "pg-ledger API"
  description: "API to access the pg-ledger database."
  license:
    name: "GNU Affero General Public License version 3"
    url: "https://www.gnu.org/licenses/agpl.txt"
paths:
  /accounts:
    get:
      description: "Gets all accounts."
      parameters:
      - name: "skip"
        in: "query"
        required: false
        description: "Skip this many accounts. If not specified, this should default to 0."
        schema:
          type: "number"
      - name: "take"
        in: "query"
        required: false
        description: "Take this many accounts. If not specified, this should default to 100."
        schema:
          type: "number"
      responses:
        '200':
          description: "A list of accounts, ordered by full name."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  totalCount:
                    type: "number"
                  accounts:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        accountFullName:
                          type: "string"
      tags:
      - "Accounts"
    post:
      description: "Adds a new account with the specified full name."
      requestBody:
        description: "The account to add."
        content:
          application/json:
            schema:
              type: "object"
              properties:
                account_full_name:
                  type: "string"
        required: true
      responses:
        '201':
          description: "The account was successfully added."
        '409':
          description: "The account with the specified name already exists."
      tags:
      - "Accounts"
  /accounts/balances:
    get:
      description: "Gets the balances of all accounts."
      responses:
        '200':
          description: "A list of accounts with balances."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    account_full_name:
                      type: "string"
                    balance:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          commoditySymbol:
                            type: "string"
                          balance:
                            type: "number"
      tags:
      - "Accounts"
  /accounts/{account_full_name}:
    parameters:
    - name: "account_full_name"
      in: "path"
      required: true
      description: "The full name of the account"
      schema:
        type: "string"
    get:
      description: "Gets the account with the specified name."
      responses:
        '200':
          description: "The account exists, and is returned."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  account_full_name:
                    type: "string"
        '404':
          description: "The account does not exist."
      tags:
      - "Accounts"
    delete:
      description: "Deletes the account with the specified name."
      responses:
        '204':
          description: "The account was successfully deleted."
        '400':
          description: "The account could not be deleted."
        '404':
          description: "The account does not exist."
      tags:
      - "Accounts"
  /accounts/{account_full_name}/balance:
    parameters:
    - name: "account_full_name"
      in: "path"
      required: true
      description: "The full name of the account"
      schema:
        type: "string"
    get:
      description: "Gets the balance of the account with the specified name."
      responses:
        '200':
          description: "The account exists, and its balances are returned."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    commoditySymbol:
                      type: "string"
                    balance:
                      type: "number"
      tags:
      - "Accounts"
tags:
- name: "Accounts"
  description: "Operations that can be performed on accounts."
- name: "Commodities"
  description: "Operations that can be performed on commodities."
- name: "Transactions"
  description: "Operations that can be performed on transactions."
- name: "Formulas"
  description: "Operations that can be performed on formulas."
